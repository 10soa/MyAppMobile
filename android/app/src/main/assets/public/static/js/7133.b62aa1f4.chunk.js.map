{"version":3,"file":"static/js/7133.b62aa1f4.chunk.js","mappings":"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","sources":["../node_modules/@capacitor/camera/dist/esm/web.js"],"sourcesContent":["import { WebPlugin, CapacitorException } from '@capacitor/core';\nimport { CameraSource, CameraDirection } from './definitions';\nexport class CameraWeb extends WebPlugin {\n    async getPhoto(options) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            if (options.webUseInput || options.source === CameraSource.Photos) {\n                this.fileInputExperience(options, resolve);\n            }\n            else if (options.source === CameraSource.Prompt) {\n                let actionSheet = document.querySelector('pwa-action-sheet');\n                if (!actionSheet) {\n                    actionSheet = document.createElement('pwa-action-sheet');\n                    document.body.appendChild(actionSheet);\n                }\n                actionSheet.header = options.promptLabelHeader || 'Photo';\n                actionSheet.cancelable = false;\n                actionSheet.options = [\n                    { title: options.promptLabelPhoto || 'From Photos' },\n                    { title: options.promptLabelPicture || 'Take Picture' },\n                ];\n                actionSheet.addEventListener('onSelection', async (e) => {\n                    const selection = e.detail;\n                    if (selection === 0) {\n                        this.fileInputExperience(options, resolve);\n                    }\n                    else {\n                        this.cameraExperience(options, resolve, reject);\n                    }\n                });\n            }\n            else {\n                this.cameraExperience(options, resolve, reject);\n            }\n        });\n    }\n    async pickImages(_options) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve) => {\n            this.multipleFileInputExperience(resolve);\n        });\n    }\n    async cameraExperience(options, resolve, reject) {\n        if (customElements.get('pwa-camera-modal')) {\n            const cameraModal = document.createElement('pwa-camera-modal');\n            cameraModal.facingMode =\n                options.direction === CameraDirection.Front ? 'user' : 'environment';\n            document.body.appendChild(cameraModal);\n            try {\n                await cameraModal.componentOnReady();\n                cameraModal.addEventListener('onPhoto', async (e) => {\n                    const photo = e.detail;\n                    if (photo === null) {\n                        reject(new CapacitorException('User cancelled photos app'));\n                    }\n                    else if (photo instanceof Error) {\n                        reject(photo);\n                    }\n                    else {\n                        resolve(await this._getCameraPhoto(photo, options));\n                    }\n                    cameraModal.dismiss();\n                    document.body.removeChild(cameraModal);\n                });\n                cameraModal.present();\n            }\n            catch (e) {\n                this.fileInputExperience(options, resolve);\n            }\n        }\n        else {\n            console.error(`Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/pwa-elements.`);\n            this.fileInputExperience(options, resolve);\n        }\n    }\n    fileInputExperience(options, resolve) {\n        let input = document.querySelector('#_capacitor-camera-input');\n        const cleanup = () => {\n            var _a;\n            (_a = input.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(input);\n        };\n        if (!input) {\n            input = document.createElement('input');\n            input.id = '_capacitor-camera-input';\n            input.type = 'file';\n            input.hidden = true;\n            document.body.appendChild(input);\n            input.addEventListener('change', (_e) => {\n                const file = input.files[0];\n                let format = 'jpeg';\n                if (file.type === 'image/png') {\n                    format = 'png';\n                }\n                else if (file.type === 'image/gif') {\n                    format = 'gif';\n                }\n                if (options.resultType === 'dataUrl' ||\n                    options.resultType === 'base64') {\n                    const reader = new FileReader();\n                    reader.addEventListener('load', () => {\n                        if (options.resultType === 'dataUrl') {\n                            resolve({\n                                dataUrl: reader.result,\n                                format,\n                            });\n                        }\n                        else if (options.resultType === 'base64') {\n                            const b64 = reader.result.split(',')[1];\n                            resolve({\n                                base64String: b64,\n                                format,\n                            });\n                        }\n                        cleanup();\n                    });\n                    reader.readAsDataURL(file);\n                }\n                else {\n                    resolve({\n                        webPath: URL.createObjectURL(file),\n                        format: format,\n                    });\n                    cleanup();\n                }\n            });\n        }\n        input.accept = 'image/*';\n        input.capture = true;\n        if (options.source === CameraSource.Photos ||\n            options.source === CameraSource.Prompt) {\n            input.removeAttribute('capture');\n        }\n        else if (options.direction === CameraDirection.Front) {\n            input.capture = 'user';\n        }\n        else if (options.direction === CameraDirection.Rear) {\n            input.capture = 'environment';\n        }\n        input.click();\n    }\n    multipleFileInputExperience(resolve) {\n        let input = document.querySelector('#_capacitor-camera-input-multiple');\n        const cleanup = () => {\n            var _a;\n            (_a = input.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(input);\n        };\n        if (!input) {\n            input = document.createElement('input');\n            input.id = '_capacitor-camera-input-multiple';\n            input.type = 'file';\n            input.hidden = true;\n            input.multiple = true;\n            document.body.appendChild(input);\n            input.addEventListener('change', (_e) => {\n                const photos = [];\n                // eslint-disable-next-line @typescript-eslint/prefer-for-of\n                for (let i = 0; i < input.files.length; i++) {\n                    const file = input.files[i];\n                    let format = 'jpeg';\n                    if (file.type === 'image/png') {\n                        format = 'png';\n                    }\n                    else if (file.type === 'image/gif') {\n                        format = 'gif';\n                    }\n                    photos.push({\n                        webPath: URL.createObjectURL(file),\n                        format: format,\n                    });\n                }\n                resolve({ photos });\n                cleanup();\n            });\n        }\n        input.accept = 'image/*';\n        input.click();\n    }\n    _getCameraPhoto(photo, options) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            const format = photo.type.split('/')[1];\n            if (options.resultType === 'uri') {\n                resolve({\n                    webPath: URL.createObjectURL(photo),\n                    format: format,\n                    saved: false,\n                });\n            }\n            else {\n                reader.readAsDataURL(photo);\n                reader.onloadend = () => {\n                    const r = reader.result;\n                    if (options.resultType === 'dataUrl') {\n                        resolve({\n                            dataUrl: r,\n                            format: format,\n                            saved: false,\n                        });\n                    }\n                    else {\n                        resolve({\n                            base64String: r.split(',')[1],\n                            format: format,\n                            saved: false,\n                        });\n                    }\n                };\n                reader.onerror = e => {\n                    reject(e);\n                };\n            }\n        });\n    }\n    async checkPermissions() {\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n            throw this.unavailable('Permissions API not available in this browser');\n        }\n        try {\n            // https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\n            // the specific permissions that are supported varies among browsers that implement the\n            // permissions API, so we need a try/catch in case 'camera' is invalid\n            const permission = await window.navigator.permissions.query({\n                name: 'camera',\n            });\n            return {\n                camera: permission.state,\n                photos: 'granted',\n            };\n        }\n        catch (_a) {\n            throw this.unavailable('Camera permissions are not available in this browser');\n        }\n    }\n    async requestPermissions() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\nconst Camera = new CameraWeb();\nexport { Camera };\n"],"names":["CameraWeb","options","Promise","resolve","reject","webUseInput","source","CameraSource","fileInputExperience","actionSheet","document","querySelector","createElement","body","appendChild","header","promptLabelHeader","cancelable","title","promptLabelPhoto","promptLabelPicture","addEventListener","e","detail","cameraExperience","_options","multipleFileInputExperience","customElements","get","cameraModal","facingMode","direction","CameraDirection","componentOnReady","photo","CapacitorException","Error","_getCameraPhoto","dismiss","removeChild","present","this","console","error","input","cleanup","_a","parentNode","id","type","hidden","_e","file","files","format","resultType","reader","FileReader","dataUrl","result","b64","split","base64String","readAsDataURL","webPath","URL","createObjectURL","accept","capture","removeAttribute","click","multiple","photos","i","length","push","saved","onloadend","r","onerror","navigator","permissions","unavailable","window","query","name","permission","camera","state","unimplemented","WebPlugin","Camera"],"sourceRoot":""}